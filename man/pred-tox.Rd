% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R, R/feature_groups.R,
%   R/feature_groups-set.R, R/compounds.R, R/feature_groups-screening.R,
%   R/feature_groups-screening-set.R, R/compounds-set.R, R/compounds-sirius.R,
%   R/formulas-set.R, R/formulas-sirius.R
\name{pred-tox}
\alias{pred-tox}
\alias{calculateTox,featureGroups-method}
\alias{calculateTox}
\alias{calculateTox,featureGroupsSet-method}
\alias{predictTox,compounds-method}
\alias{predictTox,featureGroupsScreening-method}
\alias{calculateTox,featureGroupsScreening-method}
\alias{predictTox,featureGroupsScreeningSet-method}
\alias{calculateTox,featureGroupsScreeningSet-method}
\alias{predictTox,compoundsSet-method}
\alias{predictTox,compoundsSIRIUS-method}
\alias{predictTox,formulasSet-method}
\alias{predictTox,formulasSIRIUS-method}
\title{Functionality to predict toxicities}
\usage{
\S4method{calculateTox}{featureGroups}(fGroups, featureAnn)

\S4method{calculateTox}{featureGroupsSet}(fGroups, featureAnn)

\S4method{predictTox}{compounds}(
  obj,
  LC50Mode = "static",
  concUnit = "ugL",
  updateScore = FALSE,
  scoreWeight = 1,
  parallel = TRUE
)

\S4method{predictTox}{featureGroupsScreening}(obj, LC50Mode = "static", concUnit = "ugL")

\S4method{calculateTox}{featureGroupsScreening}(fGroups, featureAnn = NULL)

\S4method{predictTox}{featureGroupsScreeningSet}(obj, ...)

\S4method{calculateTox}{featureGroupsScreeningSet}(fGroups, featureAnn = NULL)

\S4method{predictTox}{compoundsSet}(obj, ...)

\S4method{predictTox}{compoundsSIRIUS}(obj, type = "FP", LC50Mode = "static", concUnit = "ugL")

\S4method{predictTox}{formulasSet}(obj, ...)

\S4method{predictTox}{formulasSIRIUS}(obj, LC50Mode = "static", concUnit = "ugL")
}
\arguments{
\item{fGroups}{For \code{predictTox} methods for feature annotations: The \code{\link{featureGroups}} object for
  which the annotations were performed.

  For \code{calculateTox}: The \code{\link{featureGroups}} object for which toxicities should be assigned.}

\item{featureAnn}{A \code{\link{featureAnnotations}} object (\emph{e.g.} \code{\link{formulasSIRIUS}} or
\code{\link{compounds}}) which contains toxicities. Optional if \code{calculateTox} is called on suspect
screening results (\emph{i.e.} \code{\link{featureGroupsScreening}} method).}

\item{obj}{The workflow object for which predictions should be performed, \emph{e.g.} feature groups with screening
results (\code{\link{featureGroupsScreening}}) or compound annotations (\code{\link{compounds}}).}

\item{LC50Mode}{The mode used for predictions: should be \code{"static"} or \code{"flow"}.}

\item{concUnit}{The concentration unit for calculated toxicities. Can be molar based (\code{"nM"}, \code{"uM"},
\code{"mM"}, \code{"M"}) or mass based (\code{"ngL"}, \code{"ugL"}, \code{"mgL"}, \code{"gL"}). Furthermore, can be
prefixed with \code{"log "} for logarithmic concentrations (\emph{e.g.} \code{"log mM"}).}

\item{updateScore, scoreWeight}{If \code{updateScore=TRUE} then the annotation \code{score} column is updated
by adding normalized values of the response factor (weighted by \option{scoreWeight}). Currently, this
\strong{only} makes sense for annotations performed with \command{MetFrag}!}

\item{parallel}{If set to \code{TRUE} then code is executed in parallel through the \CRANpkg{futures} package. Please
see the parallelization section in the handbook for more details.}

\item{\dots}{\setsWF Further arguments passed to the non-sets workflow method.}

\item{type}{Which types of predictions should be performed: should be \code{"FP"} (\command{SIRIUS+CSI:FingerID}
fingerprints), \code{"SMILES"} or \code{"both"}. Only relevant for \code{\link{compoundsSIRIUS}} method.}
}
\value{
\code{predictTox} returns an object amended with LC 50 values (\code{LC50_SMILES}/\code{LC50_SIRFP} columns).

  \code{calculateTox} returns a \code{\link{featureGroups}} based object amended with toxicity values for each
  feature group (accessed with the \code{\link{toxicities}} method).
}
\description{
Functions to predict toxicities from \acronym{SMILES} and/or \command{SIRIUS+CSI:FingerID} fingerprints using the
\pkg{MS2Tox} package.
}
\details{
The \href{https://github.com/kruvelab/MS2Tox}{MS2Tox} \R package predicts toxicities from \acronym{SMILES} and/or
MS/MS fingerprints obtained with \command{SIRIUS+CSI:FingerID}. The \code{predictTox} method functions interface with
this package to predict toxicities, which can then be assigned to feature groups with the \code{calculateTox} method
function.
}
\note{
The \CRANpkg{rcdk} package and \href{https://github.com/openbabel/openbabel}{OpenBabel} tool are used
  internally to calculate molecular weights. Please make sure that \command{OpenBabel} is installed.
}
\section{Predicting toxicities}{
 The toxicities are predicted with the \code{predictTox} generic functions,
  which accepts the following input:

\itemize{

\item \link[=suspect-screening]{Suspect screening results}. The \acronym{SMILES} data is used to predict
toxicities for suspect hits.

\item Formula annotation data obtained with \code{"sirius"} algorithm (\code{\link{generateFormulasSIRIUS}}). The
predictions are performed for each formula candidate using \command{SIRIUS+CSI:FingerID} fingerprints. For this
reason, the \code{getFingerprint} argument must be set to \code{TRUE} when generating the formula data.

\item Compound annotation data obtained with the \code{"sirius"} algorithm (\code{\link{generateCompoundsSIRIUS}}).
The predictions are performed for each annotation candidate using its \acronym{SMILES} and/or
\command{SIRIUS+CSI:FingerID} fingerprints. The predictions are performed on a per formula basis, hence,
toxicities for isomers will be equal.

\item Compound annotation data obtained with algorithms other than \code{"sirius"}. The toxicities are predicted
from \acronym{SMILES} data.

}

  When \acronym{SMILES} data is used then predictions of toxicities are generally more accurate. However,
  calculations with \command{SIRIUS+CSI:FingerID} fingerprints are faster and only require the formula and MS/MS
  spectrum, \emph{i.e.} not the full structure. Hence, calculations with \acronym{SMILES} are mostly useful in
  suspect screening workflows, or with high confidence compound annotation data, whereas MS/MS fingerprints are
  suitable with unknowns.

  For annotation data the calculations are performed for \emph{all} candidates. This can especially lead to long
  running calculations when \acronym{SMILES} data is used. Hence, it is \strong{strongly} recommended to first
  prioritize the annotation results, \emph{e.g.} with the \code{topMost} argument to the
  \link[=filter,featureAnnotations-method]{filter method}.

  When toxicities are predicted from \command{SIRIUS+CSI:FingerID} fingerprints then only formula and MS/MS
  spectra are used, even if compound annotations are used for input. The major difference is that with formula
  annotation input \emph{all} formula candidates for which a fingerprint could be generated are considered, whereas
  with compound annotations only candidate formulae are considered for which also a structure could be assigned.
  Hence, the formula annotation input could be more comprehensive, whereas predictions from structure annotations
  could lead to more representative results as only formulae are considered for which at least one structure could be
  assigned.
}

\section{Assigning toxicities}{
 The \code{calculateTox} generic function is used to assign toxicities for each
  feature using the toxicities discussed in the previous section. The function takes toxicities from suspect
  screening results and/or feature annotation data. If multiple toxicities were predicted for the same feature
  group, for instance when multiple annotation candidates or suspect hits for this feature group are present, then a
  toxicities is assigned for all toxicities. These values can later be easily aggregated with \emph{e.g.} the
  \link[=as.data.table,featureGroups-method]{as.data.table} function.
}

\references{
\insertRef{OBoyle2011}{patRoon} \cr \cr \addCitations{rcdk}

\insertRef{Peets2022}{patRoon}
}
\seealso{
\link[=pred-quant]{Concentration prediction}
}
