% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/features-openms.R
\name{findFeaturesOpenMS}
\alias{findFeaturesOpenMS}
\title{Find features using OpenMS}
\usage{
findFeaturesOpenMS(
  analysisInfo,
  noiseThrInt = 1000,
  chromSNR = 3,
  chromFWHM = 5,
  mzPPM = 10,
  reEstimateMTSD = TRUE,
  traceTermCriterion = "sample_rate",
  traceTermOutliers = 5,
  minSampleRate = 0.5,
  minTraceLength = 3,
  maxTraceLength = -1,
  widthFiltering = "fixed",
  minFWHM = 1,
  maxFWHM = 30,
  traceSNRFiltering = FALSE,
  localRTRange = 10,
  localMZRange = 6.5,
  isotopeFilteringModel = "metabolites (5\% RMS)",
  MZScoring13C = FALSE,
  useSmoothedInts = TRUE,
  extraOpts = NULL,
  intSearchRTWindow = 3,
  useFFMIntensities = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{analysisInfo}{A \code{data.frame} with \link[=analysis-information]{Analysis information}.}

\item{noiseThrInt}{Noise intensity threshold. Sets \code{algorithm:common:noise_threshold_int} option.}

\item{chromSNR}{Minimum S/N of a mass trace. Sets \code{algorithm:common:chrom_peak_snr} option.}

\item{chromFWHM}{Expected chromatographic peak width (in seconds). Sets \code{algorithm:common:chrom_fwhm} option.}

\item{mzPPM}{Allowed mass deviation (ppm) for trace detection. Sets \code{algorithm:mtd:mass_error_ppm}.}

\item{reEstimateMTSD}{If \code{TRUE} then enables dynamic re-estimation of m/z variance during mass trace collection
stage. Sets \code{algorithm:mtd:reestimate_mt_sd}.}

\item{traceTermCriterion, traceTermOutliers, minSampleRate}{Termination criterion for the extension of mass traces. See
\href{https://abibuilder.cs.uni-tuebingen.de/archive/openms/Documentation/nightly/html/TOPP_FeatureFinderMetabo.html}{FeatureFinderMetabo}.
 Sets the \code{algorithm:mtd:trace_termination_criterion}, \code{algorithm:mtd:trace_termination_outliers} and
\code{algorithm:mtd:min_sample_rate} options, respectively.}

\item{minTraceLength, maxTraceLength}{Minimum/Maximum length of mass trace (seconds). Set negative value for maxlength
to disable maximum. Sets \code{algorithm:mtd:min_trace_length} and \code{algorithm:mtd:min_trace_length},
respectively.}

\item{widthFiltering, minFWHM, maxFWHM}{Enable filtering of unlikely peak widths. See
\href{https://abibuilder.cs.uni-tuebingen.de/archive/openms/Documentation/nightly/html/TOPP_FeatureFinderMetabo.html}{FeatureFinderMetabo}.
 Sets \code{algorithm:epd:width_filtering}, \code{algorithm:epd:min_fwhm} and \code{algorithm:epd:max_fwhm},
respectively.}

\item{traceSNRFiltering}{If \code{TRUE} then apply post-filtering by signal-to-noise ratio after smoothing. Sets the
\code{algorithm:epd:masstrace_snr_filtering} option.}

\item{localRTRange, localMZRange}{Retention/MZ range where to look for coeluting/isotopic mass traces. Sets the
\code{algorithm:ffm:local_rt_range} and \code{algorithm:ffm:local_mz_range} options, respectively.}

\item{isotopeFilteringModel}{Remove/score candidate assemblies based on isotope intensities. See
\href{https://abibuilder.cs.uni-tuebingen.de/archive/openms/Documentation/nightly/html/TOPP_FeatureFinderMetabo.html}{FeatureFinderMetabo}.
 Sets the \code{algorithm:ffm:isotope_filtering_model} option.}

\item{MZScoring13C}{Use the 13C isotope as the expected shift for isotope mass traces. See
\href{https://abibuilder.cs.uni-tuebingen.de/archive/openms/Documentation/nightly/html/TOPP_FeatureFinderMetabo.html}{FeatureFinderMetabo}.
 Sets \code{algorithm:ffm:mz_scoring_13C}.}

\item{useSmoothedInts}{If \code{TRUE} then use LOWESS intensities instead of raw intensities. Sets the
\code{algorithm:ffm:use_smoothed_intensities} option.}

\item{extraOpts}{Named \code{list} containing extra options that will be passed to \command{FeatureFinderMetabo}. Any
options specified here will override any of the above. Example:
\code{extraOpts=list("-algorithm:common:noise_threshold_int"=1000)} (corresponds to setting
\code{noiseThrInt=1000}). Set to \code{NULL} to ignore.}

\item{intSearchRTWindow}{Retention time window (in seconds, +/- feature retention time) that is used to find the
closest data point to the retention time to obtain the intensity of a feature (this is needed since OpenMS does not
provide this data).}

\item{useFFMIntensities}{If \code{TRUE} then peak intensities are directly loaded from \command{FeatureFinderMetabo}
output. Otherwise, intensities are loaded afterwards from the input \file{mzML} files, which is potentially much
slower, especially with many analyses files. However, \code{useFFMIntensities=TRUE} is still somewhat experimental,
may be less accurate and requires a recent version of \command{OpenMS} (>=2.7).}

\item{verbose}{If set to \code{FALSE} then no text output is shown.}
}
\value{
An object of a class which is derived from \code{\link{features}}.
}
\description{
uses the
\href{https://abibuilder.cs.uni-tuebingen.de/archive/openms/Documentation/nightly/html/TOPP_FeatureFinderMetabo.html}{FeatureFinderMetabo}
TOPP tool (see \url{http://www.openms.de}) to find features.
}
\details{
This function uses OpenMS to automatically find features. This function is called when calling \code{findFeatures} with
  \code{algorithm="openms"}.

This functionality has been tested with OpenMS version >= 2.0. Please make sure it is installed and
  configured, e.g. by installing \code{patRoonExt} or configuring the path of the binaries with
  the \code{patRoon.path.OpenMS} option or the system \option{PATH} variable.

  The file format of analyses must be \file{mzML}.

The input MS data files need to be centroided. The \code{\link{convertMSFiles}} function can be used to
  centroid data.
}
\section{Parallelization}{
 \code{findFeaturesOpenMS} uses multiprocessing to parallelize
  computations. Please see the parallelization section in the handbook for
  more details and \link[=patRoon-package]{patRoon options} for configuration
  options.

 Note that for caching purposes, the analyses files must always exist on the local host
  computer, even if it is not participating in computations.
}

\references{
\insertRef{Rst2016}{patRoon} \cr\cr
  \href{https://pugixml.org/}{pugixml} (via \href{http://www.rcpp.org/}{Rcpp}) is used to process OpenMS XML output. \cr\cr
  \addCitations{Rcpp}{1}
}
\seealso{
\code{\link{findFeatures}} for more details and other algorithms.
}
